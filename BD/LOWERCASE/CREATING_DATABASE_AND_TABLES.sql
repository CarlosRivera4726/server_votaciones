DROP DATABASE IF EXISTS registraduria;
CREATE DATABASE IF NOT EXISTS registraduria;

USE registraduria;

CREATE TABLE IF NOT EXISTS votaciones(
	ID INT auto_increment PRIMARY KEY,
    TIPO VARCHAR(25) NOT NULL,
    FECHA DATETIME NOT NULL
);
CREATE TABLE IF NOT EXISTS departamentos(
	ID INT AUTO_INCREMENT PRIMARY KEY,
    NOMBRE VARCHAR(35) NOT NULL
);

CREATE TABLE IF NOT EXISTS ciudades(
	ID INT AUTO_INCREMENT PRIMARY KEY,
    NOMBRE VARCHAR(35) NOT NULL,
    DEPARTAMENTO INT NOT NULL,
    
    CONSTRAINT FOREIGN KEY(DEPARTAMENTO) REFERENCES departamentos(ID)
);

CREATE TABLE IF NOT EXISTS personas(
	ID BINARY(16) PRIMARY KEY DEFAULT(UUID_TO_BIN(UUID())),
    NOMBRE VARCHAR(25) NOT NULL,
    APELLIDO VARCHAR(25) NOT NULL,
    CEDULA VARCHAR(255) NOT NULL UNIQUE,
    /*DEPARTAMENTO INT NOT NULL,*/
    CIUDAD INT NOT NULL,
	CONTRASEÃ‘A VARCHAR(255) NOT NULL,
    CONSTRAINT FOREIGN KEY (CIUDAD) REFERENCES ciudades(ID)
    /* TODO: ESTUDIAR ESTO BIEN ANTES DE REALIZAR CAMBIOS */
);

CREATE TABLE IF NOT EXISTS personas_votaciones(
    PERSONA BINARY(16) NOT NULL,
    VOTACION INT NOT NULL,
    DISPONIBLE BOOLEAN NOT NULL DEFAULT 1,
    
    CONSTRAINT FOREIGN KEY (PERSONA) REFERENCES personas(ID),
    CONSTRAINT FOREIGN KEY (VOTACION) REFERENCES votaciones(ID),
    CONSTRAINT PRIMARY KEY (PERSONA, VOTACION)
);

CREATE TABLE IF NOT EXISTS candidatos_votaciones (
	ID BINARY(16) PRIMARY KEY DEFAULT(UUID_TO_BIN(UUID())),
    PERSONA BINARY(16) NOT NULL UNIQUE, /* Este se vuelve candidato, lo que quiere decir que debe ser unico*/
    VOTACION INT NOT NULL,
    VOTOS BIGINT NOT NULL DEFAULT(0),
    
    CONSTRAINT FOREIGN KEY (PERSONA) REFERENCES personas(ID),
    CONSTRAINT FOREIGN KEY (VOTACION) REFERENCES votaciones(ID)
);